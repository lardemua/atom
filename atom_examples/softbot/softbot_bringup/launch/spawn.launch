<launch>
    <!-- Launch file arguments-->
<!--    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>-->
    <arg name="model" default="burger" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="name" default="softbot"/>
    <arg name="x_pos" default="-3.0"/>
    <arg name="y_pos" default="1.0"/>
    <arg name="z_pos" default="0.0"/>

        <!--Bloco 4: Spawning (criação instantânea) do robô definido pela descrição anteriormente carregada para o robot_description, para uma posição específica da cena. -->
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg name) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />


        <!--Load the controller's parameters from a yaml file.-->
<!--        <param name="tf_prefix" value="$(arg name)"></param>-->
<!--        <rosparam file="$(find softbot_description)/config/controller.yaml" command="load"/>-->
<!--        <param name="/$(arg name)/differential_drive_controller/base_frame_id" value="$(arg name)/base_footprint"></param>-->
<!--        <param name="/$(arg name)/differential_drive_controller/odom_frame_id" value="$(arg name)/odom"></param>-->

<!--        &lt;!&ndash;Load controller (from ROS)&ndash;&gt;-->
<!--&lt;!&ndash;        <node name="differential_drive_controller" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="left_wheel_position_controller right_wheel_position_controller joint_state_controller differential_drive_controller"/>&ndash;&gt;-->
<!--        <node name="drive_controllers" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller differential_drive_controller"/>-->
</launch>